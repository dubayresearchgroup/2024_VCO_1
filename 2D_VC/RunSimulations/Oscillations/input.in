clear
#Variable Definition

#Filenames
variable name string zj_real


#Loops
variable point index ${max}  #average eps
variable range index  0.4 #amplitude of oscillation
variable period index 20000 #period of oscillation (tau_osc)
variable chunk loop 1
variable seed equal 74143


#Filenames
variable filename string ${name}_${point}_${range}pt1_${period}
log ${filename}.log append


if "${chunk} == 1" then "variable input string random_${seed}" &
else "variable input string ${name}"

#Neighbor Parameters
variable skin equal 0.5
variable ghost equal 2.0

#oscillating parameters to create time dependent epsA
variable amp equal 2*${range}
variable epsA equal ${amp}*(2*floor(step/${period})-floor(2*step/${period}))+(${point}+${range})

#Potential Parameters
variable sigma equal 0.25
variable cutA equal 2.5*${sigma}
variable epsB equal 1.0
variable cutB equal (2^(1/6))*${sigma}

#Kinetic Parameters
variable temp equal 1.0
variable damp equal 0.35

#Time Parameters
variable time index 28500000
variable time2 index 1500000
variable step equal 0.005
variable delay equal 5
variable thermo equal 5000
variable dump equal 2000
variable dump2 equal 1

#Initial Definitions

#Particle and Box Definitions 
atom_style molecular
dimension 2
read_restart ${input}.restart
reset_timestep 0

#Neighbor Definitions
neigh_modify delay ${delay} exclude molecule/intra all
neighbor ${skin} bin
comm_modify cutoff ${ghost}


#Potential Definitions
pair_style lj/cut ${cutA}
pair_modify shift yes
pair_coeff 3 3 ${epsA} ${sigma} ${cutA}
pair_coeff 1 3 ${epsA} ${sigma} ${cutA}
pair_coeff 1 1 ${epsA} ${sigma} ${cutA}
pair_coeff * 2 ${epsB} ${sigma} ${cutB}
pair_coeff 2 * ${epsB} ${sigma} ${cutB}

#Kinetic Definitions
fix 2 all rigid/nve/small molecule langevin ${temp} ${temp} ${damp} ${seed}
fix 1 all enforce2d

##Update time dependent epsA
fix 3 all adapt 1 pair lj/cut epsilon 3 3 v_epsA
fix 4 all adapt 1 pair lj/cut epsilon 1 3 v_epsA
fix 5 all adapt 1 pair lj/cut epsilon 1 1 v_epsA



##Print temperature at certain times to check 
fix 10 all print/if 1 "$(step) $(temp)" "($(step)>=0&&$(step)<=1000000)" file TEMP_zj_real${point}_${range}pt1_${period}_beginning.txt
fix 11 all print/if 1 "$(step) $(temp)" "($(step)>=14000000&&$(step)<=15000000)" file TEMP_zj_real${point}_${range}pt1_${period}_middle.txt
fix 12 all print/if 1 "$(step) $(temp)" "($(step)>=29000000&&$(step)<=30000000)" file TEMP_zj_real${point}_${range}pt1_${period}_end.txt

#Time Definitions
timestep ${step}

#Output Definitions
thermo ${thermo}
thermo_style custom step temp pe ke etotal v_epsA
dump traj all atom ${dump} ${filename}.lammpstrj

#Simulation
run ${time}
write_restart ${filename}_$(step).restart


##Simulation
restart 30000 zj_real_${point}_${range}pt1_${period}
run ${time2}
write_restart ${filename}-Final.restart

